!function(e){function n(n){for(var a,o,i=n[0],l=n[1],c=n[2],p=0,u=[];p<i.length;p++)o=i[p],r[o]&&u.push(r[o][0]),r[o]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);for(d&&d(n);u.length;)u.shift()();return s.push.apply(s,c||[]),t()}function t(){for(var e,n=0;n<s.length;n++){for(var t=s[n],a=!0,i=1;i<t.length;i++){var l=t[i];0!==r[l]&&(a=!1)}a&&(s.splice(n--,1),e=o(o.s=t[0]))}return e}var a={},r={0:0},s=[];function o(n){if(a[n])return a[n].exports;var t=a[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.m=e,o.c=a,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,n){if(1&n&&(e=o(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)o.d(t,a,function(n){return e[n]}.bind(null,a));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="";var i=window.webpackJsonp=window.webpackJsonp||[],l=i.push.bind(i);i.push=n,i=i.slice();for(var c=0;c<i.length;c++)n(i[c]);var d=l;s.push([571,1]),t()}({256:function(e,n,t){e.exports=t.p+"assets/logo_apex.png"},257:function(e,n,t){"use strict";(function(e){var a=t(105),r=t.n(a),s=t(67),o=t.n(s);n.a=function(){return{verifyJWS:function(n,t){try{return{result:r.a.jwa(n.header.alg).verify(e.from(n.protected+"."+n.payload),o.a.decode(n.signature),t),output:JSON.parse(o.a.decode(n.payload).toString("utf8"))}}catch(e){return{status:"Error",output:"Failed to verify JWS "+e}}},decryptJWE:function(n,t){try{var a=o.a.decode(n.ciphertext),s=e.from(n.tag,"base64"),i=e.from(n.protected,"ascii"),l=o.a.decode(n.iv),c=o.a.decode(n.encrypted_key),d=new r.a.jwa(n.header.alg).unwrapKey(c,t),p=new r.a.jwa(n.header.enc).decrypt(a,s,i,l,d);return{result:!0,output:JSON.parse(p.toString())}}catch(e){return{status:"Error",output:"Failed to decrypt JWE "+e}}}}}}).call(this,t(2).Buffer)},470:function(e,n){},472:function(e,n){},507:function(e,n){},508:function(e,n){},569:function(e,n,t){var a=t(570);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(74)(a,r);a.locals&&(e.exports=a.locals)},570:function(e,n,t){(e.exports=t(73)(!1)).push([e.i,".test-response textarea {\n    min-height: 8em;\n    max-height: 30em;\n}\n\n.auth-level-buttons {\n    display: inline-block;\n}\n\n.pass {\n    color: green;\n}\n\n.fail {\n    font-style: italic;\n    color: red;\n}\n\n.immutable {\n    color: green;\n}\n\n.point-cursor {\n    cursor: pointer;\n}\n\n.uri-preview {\n    font-size: 16px;\n}\n\n.heading {\n    font-size: 22px;\n    margin-bottom: 15px;\n}\n\n#main-navbar {\n    padding-top: 5px;\n    padding-bottom: 5px;\n}\n\n.main-content {\n    padding-left: 40px;\n    padding-right: 40px;\n    margin-bottom: 50px;\n}\n\n.test-send-success {\n    background-color: lightgreen;\n}\n\n.test-send-fail {\n    background-color: lightsalmon;\n}\n\n.test-send {\n    background-color: #ededed;\n}\n\n.inline {\n    display: inline;\n}\n\n.missing-basestring-char {\n    background-color: #ff7762\n}\n\n.incorrect-basestring-char {\n    /*background-color: #FFFF00;*/\n    background-color: #ffef96;\n}\n\n.extra-basestring-char {\n    text-decoration: line-through;\n    color: #ff7762;\n}\n\npre, .wrap {\n    white-space: pre-wrap; /* css-3 */\n    white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n    white-space: -pre-wrap; /* Opera 4-6 */\n    white-space: -o-pre-wrap; /* Opera 7 */\n    word-wrap: break-word; /* Internet Explorer 5.5+ */\n}\n\n.code {\n    font-family: monospace;\n}\n\n/* --- Loading Animations --- */\n.spinner {\n    margin: 100px auto 0;\n    width: 70px;\n    text-align: center;\n}\n\n.spinner > div {\n    width: 18px;\n    height: 18px;\n    background-color: #333;\n\n    border-radius: 100%;\n    display: inline-block;\n    -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n    animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n}\n\n.spinner .bounce1 {\n    -webkit-animation-delay: -0.32s;\n    animation-delay: -0.32s;\n}\n\n.spinner .bounce2 {\n    -webkit-animation-delay: -0.16s;\n    animation-delay: -0.16s;\n}\n\n@-webkit-keyframes sk-bouncedelay {\n    0%, 80%, 100% {\n        -webkit-transform: scale(0)\n    }\n    40% {\n        -webkit-transform: scale(1.0)\n    }\n}\n\n@keyframes sk-bouncedelay {\n    0%, 80%, 100% {\n        -webkit-transform: scale(0);\n        transform: scale(0);\n    }\n    40% {\n        -webkit-transform: scale(1.0);\n        transform: scale(1.0);\n    }\n}\n\n/*-------------------------------*/",""])},571:function(e,n,t){"use strict";t.r(n);t(258);var a=t(155),r=t.n(a),s=t(253),o=t.n(s),i=t(254),l=t.n(i),c=t(255),d=t.n(c),p=(t(447),t(450),t(453),t(460),t(462),t(256)),u=t.n(p);function g(){this.apexLogo=u.a,this.version="1.2.1"}g.$inject=[];var m=g,f=t(82),v=t.n(f),h=t(45),y=t.n(h);function b(e,n,t){var a=this;a.currentConfig=t,a.currentConfigString=JSON.stringify(t,null,2),e.saveConfigAsJson=function(){var e=new Blob([a.currentConfigString],{type:"application/json;charset=utf-8;"}),n=angular.element("<a></a>");n.attr("href",window.URL.createObjectURL(e)),n.attr("download","savedInputs.json"),n[0].click()},e.set=function(){n.close(JSON.parse(a.currentConfigString))},e.cancel=function(){n.dismiss("cancelled")},e.parseInputFile=function(e){a.currentConfigString=JSON.stringify(JSON.parse(e),null,2)}}b.$inject=["$scope","$uibModalInstance","currentConfig"];var w={template:'\n<div class="modal-header">\n    <h3 class="modal-title">Save or load configuration</h3>\n</div>\n<div class="modal-body">\n    <label for="currentConfigString">Select JSON configuration file to load:</label>\n    <input type="file" on-read-file="parseInputFile($fileContents)" style="display:inline-block">\n    <textarea rows="20" cols="65" name="currentConfigString" id="currentConfigString" class="form-control code" ng-model="$ctrl.currentConfigString"></textarea>\n</div>\n<div class="modal-footer" style="justify-content:space-between">\n    <span>\n        <button class="btn btn-primary" type="button" ng-click="saveConfigAsJson()">\n            <i class="fas fa-save"></i>\n            Save as JSON\n        </button>\n    </span>\n    \n    <span ng-if="$ctrl.currentConfig.selectedLevel === 1" class="fail" style="">Warning! App secret will be saved in this config.</span>\n\n    <span>\n        <button class="btn btn-primary" type="button" ng-click="set()">\n            <span class="glyphicon glyphicon-ok"></span>\n            Set current config\n        </button>\n        \n        <button class="btn btn-danger" type="button" ng-click="cancel()">\n            <span class="glyphicon glyphicon-remove"></span>\n            Cancel\n        </button>\n    </span>\n    \n</div>',controller:b};function S(e,n,t,a,r,s){var o=this;function i(){switch(o.selectedLevel){case 0:return"";case 1:return n.main.sigMethod.level1;case 2:return n.main.sigMethod.level2}}function l(){if(o.gatewayZone===n.constants.gatewayZones.internet)switch(o.selectedLevel){case 1:return"apex_l1_eg";case 2:return"apex_l2_eg";default:return""}else if(o.gatewayZone===n.constants.gatewayZones.intranet)switch(o.selectedLevel){case 1:return"apex_l1_ig";case 2:return"apex_l2_ig";default:return""}}function c(e,n){o.requestBody.urlencoded.push({key:e,value:n})}function d(){if(0!==o.selectedLevel)if(o.showBasestringComparison=!1,function(e){switch(e){case 0:return o.apiUrl&&o.apiUrl.length>0;case 1:return o.apiUrl&&o.apiUrl.length>0&&o.appId&&o.appId.length>0&&o.appSecret&&o.appSecret.length>0&&o.nonce&&o.nonce.length>0&&o.timestamp&&o.timestamp.length>0;case 2:return o.apiUrl&&o.apiUrl.length>0&&o.appId&&o.appId.length>0&&o.pem&&o.pem.length>0&&o.nonce&&o.nonce.length>0&&o.timestamp&&o.timestamp.length>0}}(o.selectedLevel)){var r,s={signatureUrl:o.signatureUrl,authPrefix:l(),signatureMethod:i(),appId:o.appId,httpMethod:o.httpMethod,appVersion:n.main.appVersion,nonce:"auto-generated"===o.nonce?y()(32).toString("base64"):o.nonce,timestamp:"auto-generated"===o.timestamp?(new Date).getTime():o.timestamp,queryString:o.queryString};if("GET"!==o.httpMethod&&"application/x-www-form-urlencoded"===o.requestBodyType&&o.requestBody.urlencoded.length>0&&(s.formData=o.requestBody.urlencoded.reduce(function(e,n){return n.key&&n.value&&(e[n.key]=n.value),e},{})),o.basestring=a.generateBasestring(s),e.privateKeyError=!1,1===o.selectedLevel)r=o.appSecret;else if(2===o.selectedLevel)try{r=v.a.KEYUTIL.getKey(o.pem,o.pkeySecret)}catch(a){e.privateKeyError=!0,o.basestring="",o.authHeader="",t.error({title:"",message:n.main.errorMessages.pkeyInvalid,delay:n.notificationShowTime})}var c=a.signBasestring(o.selectedLevel,o.basestring,r),d=a.genAuthHeader(s,c);o.authHeader=d}else p()&&(o.basestring="",o.authHeader="")}function p(){return o.basestring&&o.basestring.length>0&&o.authHeader&&o.authHeader.length>0}function u(e){Object.keys(e).forEach(function(n){o[n]=e[n]}),d()}e.nonceDisabled=!0,e.timestampDisabled=!0,o.timestamp="auto-generated",o.nonce="auto-generated",o.selectedLevel=0,o.sendingTestRequest=!1,o.apiUrl="",o.requestBodyType=n.constants.requestBodyTypes[0],o.requestBody={json:"",urlencoded:[]},e.httpMethods=n.main.httpMethods,o.httpMethod=e.httpMethods[0],e.gatewayZoneOptions=n.main.providerGateway,o.gatewayZone=e.gatewayZoneOptions[0],o.authLevels=n.main.authLevels,o.appVersion=n.main.appVersion,e.config=n,o.addUrlencodedBody=c,o.authPrefix=l,o.canSendTestRequest=function(){return 0===o.selectedLevel?o.apiUrl&&o.apiUrl.length>0:o.basestring&&o.authHeader},o.compareBasestring=function(e,a){null==a&&(a="");o.showBasestringComparison=!0;for(var s=!1,i="",l=0;l<e.length;l++){var c=e[l],d=a[l];if(null==d){var p=e.substring(l);i+="<span class='missing-basestring-char'>"+p+"</span>";break}c===d||s?c===d&&s&&(d="</span>"+d,s=!1):(d="<span class='incorrect-basestring-char''>"+d,s=!0),i+=d}a.length>e.length&&(s&&(i+="</span>"),i+="<span class = 'extra-basestring-char'>"+a.substring(e.length)+"</span>");o.basestringComparison=r.trustAsHtml(i),e===a?t.success({message:"Basestrings are the same",delay:n.notificationShowTime}):t.error({message:"Basestrings are different",delay:n.notificationShowTime})},o.changeAuthLevel=function(e){o.selectedLevel=e,o.apiTest=null,d()},o.changeRequestBodyType=function(){"application/x-www-form-urlencoded"===o.requestBodyType&&0===o.requestBody.urlencoded.length&&c("","")},o.getApiTestHeaders=function(e){for(var n="",t=Object.keys(e),a=0;a<t.length;a++){var r=t[a];n+="".concat(r,": ").concat(e[r],"\n")}return n},o.formSignatureUrl=function(){if(o.allowCustomSignatureUrl)return;if(""===o.apiUrl||!o.apiUrl)return"";var e=o.apiUrl.indexOf(".api.gov.sg");if(-1!==e){var t=o.apiUrl.substring(e),a=o.apiUrl.substring(0,e),r=o.gatewayZone===n.constants.gatewayZones.internet?"e":"i";o.signatureUrl="".concat(a,".").concat(r).concat(t)}else o.signatureUrl=o.apiUrl},o.onToggleCustomSignatureUrl=function(){o.allowCustomSignatureUrl||(o.formSignatureUrl(),d())},o.removeUrlencodedBody=function(e){o.requestBody.urlencoded.splice(e,1),d()},o.sendTestRequest=function(){o.sendingTestRequest=!0,o.apiTest=null;var e={};"GET"!==o.httpMethod&&(e.requestBodyType=o.requestBodyType,"application/x-www-form-urlencoded"===o.requestBodyType?e.requestBody=o.requestBody.urlencoded.reduce(function(e,n){return n.key&&n.value&&(e[n.key]=n.value),e},{}):"application/json"===o.requestBodyType&&(e.requestBody=JSON.parse(o.requestBody.json)));0!==o.selectedLevel&&(e.authHeader=o.authHeader);return a.sendTestRequest(o.apiUrl,o.httpMethod,o.selectedLevel,e).then(function(e){o.apiTest=e}).catch(function(e){o.apiTest=e,"error"===e.xhrStatus&&-1===e.status&&t.error({message:n.main.errorMessages.httpRequestError,delay:n.notificationShowTime})}).finally(function(){d(),o.sendingTestRequest=!1})},o.signatureMethod=i,o.signatureGenerated=p,o.showOptions=function(){s.open({animation:!0,backdrop:!1,template:w.template,controller:w.controller,controllerAs:"$ctrl",size:"lg",resolve:{currentConfig:function(){var e={gatewayZone:o.gatewayZone,httpMethod:o.httpMethod,apiUrl:o.apiUrl,signatureUrl:o.signatureUrl,allowCustomSignatureUrl:o.allowCustomSignatureUrl,selectedLevel:o.selectedLevel,appId:o.appId,nonce:o.nonce,timestamp:o.timestamp};"GET"!==o.httpMethod&&(e.requestBodyType=o.requestBodyType,e.requestBody=o.requestBody,e.requestBody.urlencoded=e.requestBody.urlencoded.map(function(e){return{key:e.key,value:e.value}}));1===o.selectedLevel&&(e.appSecret=o.appSecret);return e}()}}).result.then(u).catch(function(){})},e.formSignature=d,e.nonceGenChange=function(){e.nonceDisabled=!e.nonceDisabled,e.nonceDisabled?o.nonce="auto-generated":o.nonce="";d()},e.timestampGenChange=function(){e.timestampDisabled=!e.timestampDisabled,e.timestampDisabled?o.timestamp="auto-generated":o.timestamp="";d()},e.parseInputFile=function(e){o.pem=e,d()}}S.$inject=["$scope","config","Notification","TestService","$sce","$uibModal"];var x={controller:S,template:'\n<div class="container-fluid main-content">\n\n<h3 style="display: inline-block">Apex Signature Validator</h3>\n<h5 ng-click="$ctrl.showOptions()" style="float: right">\n    <a href><i class="fas fa-cogs"></i> Load/save From JSON</a>\n</h5>\n\n<div class="card">\n    <h4 class="card-header text-center">        \n        <span class="badge badge-primary">1</span> HTTP Request parameters           \n    </h4>\n\n    <div class="card-body">\n        <form name="httpRequestForm">\n            <label>Gateway zone </label>\n            <div class="form-check form-check-inline" ng-repeat="gatewayZone in gatewayZoneOptions">\n                <label class="form-check-label">\n                    <input type="radio" name="gatewayZoneOptions" class="form-check-input"\n                        ng-model="$ctrl.gatewayZone" value="{{gatewayZone}}" \n                        ng-change="$ctrl.formSignatureUrl(); formSignature()">\n                    {{gatewayZone}}\n                </label>\n            </div>\n\n            <br>\n        \n            <div class="form-row">\n                <div class="form-group col-sm-2">\n                    <label for="httpMethodSelector">Request</label>\n                    <select id="httpMethodSelector" ng-change="formSignature()" ng-options="httpMethod for httpMethod in httpMethods" \n                            ng-model="$ctrl.httpMethod" class="form-control">\n                    </select>\n                </div>\n            \n\n                <div class="form-group col-sm-10">\n                    <label for="apiUrl">API URL</label>\n\n                    <input type="text" autocomplete="off" class="form-control" name="apiUrl" id="apiUrl"\n                        ng-change="$ctrl.formSignatureUrl(); formSignature()" ng-model="$ctrl.apiUrl" required\n                        placeholder="https://mygateway.api.gov.sg/myservice/api/v1/users">\n                    \n                    <span ng-show="httpRequestForm.apiUrl.$touched && httpRequestForm.apiUrl.$invalid" class="fail">\n                        API URL is required.\n                    </span>\n                </div>\n            </div>\n\n            <br>\n\n            <div class="row" ng-if="$ctrl.httpMethod !== \'GET\'">\n                <div class="col-md-12">\n                    <div class="row">\n                        <div class="col-md-12">\n                            <label>Request body</label>\n                            \n                            <div class="form-check form-check-inline" ng-repeat="requestBodyType in config.constants.requestBodyTypes">\n                                <label class="form-check-label">\n                                    <input type="radio" class="form-check-input" name="requestBodyType" \n                                        ng-model="$ctrl.requestBodyType" value="{{requestBodyType}}" \n                                        ng-change="$ctrl.changeRequestBodyType(); formSignature()">\n                                    {{requestBodyType}}\n                                </label>\n                            </div>\n                            <a href ng-click="$ctrl.addUrlencodedBody(\'\',\'\')" ng-if="$ctrl.requestBodyType === \'application/x-www-form-urlencoded\'"> <span class="glyphicon glyphicon-plus"></span> Add</a>\n                        </div>\n                    </div>\n                    <div class="row" ng-if="$ctrl.requestBodyType !== config.constants.requestBodyTypes[0]">\n                        <div class="col-md-12">\n                            <textarea class="form-control code" ng-if="$ctrl.requestBodyType === \'application/json\'" ng-model="$ctrl.requestBody.json"></textarea>\n                            <fieldset class="form-group" ng-if="$ctrl.requestBodyType === \'application/x-www-form-urlencoded\'">\n                                <div class="row" ng-repeat="kvpair in $ctrl.requestBody.urlencoded">\n                                    <div class="col-sm-6">\n                                        <div class="form-group row">\n                                            <label class="col-sm-2 col-form-label" for="{{ \'urlencodedBodyKey\' + $index }}">Key</label>\n                                            <div class="col-sm-10">\n                                                <input type="text" id="{{ \'urlencodedBodyKey\' + $index }}" class="form-control" ng-model="kvpair.key" ng-change="formSignature()">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    <div class="col-sm-5">\n                                        <div class="form-group row">\n                                            <label class="col-sm-2 col-form-label" for="{{ \'urlencodedBodyValue\' + $index }}">Value</label>\n                                            <div class="col-sm-10">\n                                                <input type="text" id="{{ \'urlencodedBodyValue\' + $index }}" class="form-control" ng-model="kvpair.value" ng-change="formSignature()">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    \n                                    <div class="col-md-1">\n                                        <button type="button" class="btn btn-danger" ng-click="$ctrl.removeUrlencodedBody($index)">\n                                            <i class="fas fa-times"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </fieldset>\n                        </div>\n                    </div>\n                </div>\n            </div>             \n        </form>\n    </div>\n</div>\n\n<div class="card">\n    <div class="card-header">\n        <div class="row">\n            <div class="col-sm-12" style="text-align:center">\n                <h4 style="display:inline-block"><span class="badge badge-primary">2</span> Apex Authentication Parameters</h4> <small><a href="http://docs.akana.com/docs-test/cm/learnmore/app_security.htm">Learn more</a></small>\n                <br>\n                <div class="btn-group">\n                    <button ng-repeat="level in $ctrl.authLevels" class="btn btn-primary" \n                        ng-click="$ctrl.changeAuthLevel(level)" ng-class="{active: $ctrl.selectedLevel === level}">\n                        L{{level}}\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="card-body">\n        <div class="row">\n            <div class="col-sm-12" ng-if="$ctrl.selectedLevel === 0" style="text-align:center">\n                <strong style="text-align:center">No authentication required for L0</strong>\n            </div>\n            <div class="col-sm-12 "  ng-if="$ctrl.selectedLevel === 1 || $ctrl.selectedLevel === 2">\n                <form name="authParamsForm">\n                    <h4 style="text-align:center">Required Parameters For L{{$ctrl.selectedLevel}} Authentication</h4>\n\n                    <div class="row">\n                        <div class="col-md-12">\n                            <label for="signatureUrl">Signature URL</label> <i class="fas fa-info-circle" tooltip-placement="top" uib-tooltip="{{ config.constants.strings.signatureUrl }}"></i>\n                            \n                            <div class="form-check" style="display:inline-block; float:right">\n                                <input name="allowCustomSignatureUrl" id="allowCustomSignatureUrl" type="checkbox" class="form-check-input" \n                                    ng-model="$ctrl.allowCustomSignatureUrl" ng-change="$ctrl.onToggleCustomSignatureUrl()">\n                                <label for="allowCustomSignatureUrl" class="form-check-label">Custom signature URL</label>\n                            </div>\n\n                            <input type="text" name="signatureUrl" id="signatureUrl" class="form-control" placeholder="https://mygateway.api.gov.sg/myservice/api/v1/users"\n                                ng-model="$ctrl.signatureUrl" ng-disabled="!$ctrl.allowCustomSignatureUrl" ng-change="formSignature()">\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        <div ng-class="{\'col-md-6\': $ctrl.selectedLevel === 2, \'col-md-4\': $ctrl.selectedLevel === 1}">\n                            <label for="authPrefix">Auth Prefix</label>\n\n                            <input type="text" class="form-control" name="authPrefix" id="authPrefix" required disabled\n                                ng-model="$ctrl.authPrefix" \n                                ng-model-options="{ getterSetter: true }"\n                                ng-change="formSignature()">\n\n                            <span ng-show="authParamsForm.authPrefix.$touched && authParamsForm.authPrefix.$invalid" class="fail">\n                                Auth Prefix is required.\n                            </span>\n                        </div>\n\n                        <div ng-class="{\'col-md-6\': $ctrl.selectedLevel === 2, \'col-md-4\': $ctrl.selectedLevel === 1}">\n                            <label for="appId">Application ID</label>\n\n                            <input type="text" name="appId" id="appId" class="form-control" required\n                                ng-model="$ctrl.appId" ng-change="formSignature()">\n\n                            <span ng-show="authParamsForm.appId.$touched && authParamsForm.appId.$invalid" class="fail">\n                                App Id is required.\n                            </span>\n                        </div>\n\n                        <div class="col-md-4" ng-if="$ctrl.selectedLevel === 1">\n                            <label for="appSecret">Application Secret</label>\n\n                            <input type="text" name="appSecret" id="appSecret" required class="form-control"\n                                   ng-model="$ctrl.appSecret" ng-change="formSignature()">\n\n                            <span ng-show="authParamsForm.appSecret.$touched && authParamsForm.appSecret.$invalid" class="fail">\n                                App Secret is required.\n                            </span>\n                        </div>\n                    </div>\n\n                    <br>\n\n                    <div class="row">\n                        <div class="col-md-6">\n                            <label for="signatureMethod">Signature Method</label>\n                            <input type="text" class="form-control" name="signatureMethod" id="signatureMethod" disabled\n                                ng-model="$ctrl.signatureMethod"\n                                ng-model-options="{ getterSetter: true }">\n                        </div>\n\n                        <div class="col-md-6">\n                            <label for="appVersion">App Version</label>\n                            <input type="text" class="form-control" name="appVersion" id="appVersion" ng-model="$ctrl.appVersion" disabled>\n                        </div>\n                    </div>\n\n                    <br>\n\n                    <div class="row">\n                        <div class="col-md-6">\n                            <label for="timestamp">Timestamp</label>\n\n                            <div class="form-check" style="display:inline-block; float:right">\n                                <input class="form-check-input" type="checkbox" name="timestampDisabledCheck" id="timestampDisabledCheck"\n                                    ng-model="timestampDisabled" ng-change="timestampGenChange()">\n                                <label for="timestampDisabledCheck">auto-generate</label>\n                            </div>\n\n                            <input type="text" class="form-control" required name="timestamp" id="timestamp"\n                                ng-model="$ctrl.timestamp" ng-disabled="timestampDisabled" ng-change="formSignature()">\n                            <span ng-show="authParamsForm.timestamp.$touched && authParamsForm.timestamp.$invalid" class="fail">\n                                Timestamp is required.\n                            </span>\n                        </div>\n                        <div class="col-md-6">\n                            <label for="nonce">Nonce</label>\n\n                            <div class="form-check" style="display:inline-block; float:right">\n                                <input class="form-check-input" type="checkbox" name="nonceDisabled" id="nonceDisabled"\n                                    ng-model="nonceDisabled" ng-change="nonceGenChange()">\n                                <label for="nonceDisabled">auto-generate</label>\n                            </div>\n                            \n                            <input type="text" class="form-control" required name="nonce" id="nonce"\n                                ng-model="$ctrl.nonce" ng-disabled="nonceDisabled" ng-change="formSignature()">\n                            <span ng-show="authParamsForm.nonce.$touched && authParamsForm.nonce.$invalid" class="fail">\n                                Nonce is required.\n                            </span>\n                        </div>\n                    </div>\n\n                    <br>\n\n                    <div class="row" ng-if="$ctrl.selectedLevel === 2">\n                        <div class="col-sm-12">\n                            <div class="row">\n                                <div class="col-sm-12">\n                                    <label for="pem">Pem File</label>\n                                    <small>\n                                        Load pem file: <input type="file" on-read-file="parseInputFile($fileContents)" style="display:inline">\n                                    </small>\n                                </div>                              \n                            </div>\n\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <textarea rows="10" cols="65" class="form-control code" name="pem" id="pem" required\n                                        ng-model="$ctrl.pem" ng-change="formSignature()">\n                                    </textarea>\n                                    <span ng-show="authParamsForm.pem.$touched && authParamsForm.pem.$invalid" class="fail">\n                                        Pem string is required.\n                                    </span>\n                                </div>\n                            </div>\n\n                            <br>\n\n                            <div class="row">\n                                <div class="col-md-12">\n                                    <label for="pkeySecret">Password for private key (if encrypted)</label>\n                                    <input type="password" class="form-control" name="pkeySecret" id="pkeySecret"\n                                            ng-model="$ctrl.pkeySecret" ng-change=formSignature()>\n                                    <p ng-if="privateKeyError" class="fail">{{ config.main.errorMessages.pkeyInvalid }}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>  \n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="card">\n    <div class="card-header">\n        <div class="row">\n            <div class="col-sm-12" style="text-align:center">\n                <h4><span class="badge badge-primary">3</span> Signature base string and headers</h4>                \n            </div>\n        </div> \n    </div>\n\n    <div class="card-body">\n        <div class="row" style="text-align:center">\n            <div class="col-sm-12" ng-if="$ctrl.selectedLevel === 0">\n                <strong>No authentication required for L0</strong>\n            </div>\n        </div>\n        <div class="row">\n            <div class="col-sm-12" ng-if="$ctrl.selectedLevel === 1 || $ctrl.selectedLevel === 2">\n                <div ng-if="!$ctrl.signatureGenerated()" style="text-align:center">\n                    <strong>\n                        Fill in all fields to generate base string and authorization header.\n                    </strong>\n                </div>\n                \n                <div class="jumbotron" ng-if="$ctrl.signatureGenerated()">\n                    <div class="row">\n                        <div class="col-md-12">\n                            <label for="basestring">Generated base string</label>\n                            <textarea rows="4" disabled class="form-control immutable code" ng-model="$ctrl.basestring" name="basestring" id="basestring"></textarea>\n                        </div>\n                    </div>                \n\n                    <div class="row">\n                        <div class="col-md-12">\n                            <label for="basestringToCompare">Base string to Compare</label>\n                            <textarea rows="4" class="form-control code" ng-model="$ctrl.basestringToCompare" name="basestringToCompare" id="basestringToCompare"></textarea>\n                        </div>\n                    </div>\n                \n                    <div class="row" ng-if="$ctrl.showBasestringComparison">\n                        <br>\n                        <div class="col-md-12">\n                            <label>Comparison Results</label>\n                            <pre ng-bind-html="$ctrl.basestringComparison"></pre>\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        <div class="col-md-12">\n                            <span style="float:right; margin-top:5px">\n                                <button class="btn btn-secondary" ng-click="$ctrl.compareBasestring($ctrl.basestring, $ctrl.basestringToCompare)">Compare Base Strings</button>\n                            </span>\n                        </div>\n                    </div>\n            \n                    <div class="row">\n                        <div class="col-md-12">\n                            <label for="authHeader">Request Authorization Header</label>\n                            <textarea rows="6" class="form-control immutable code" name="authHeader" id="authHeader"\n                                ng-model="$ctrl.authHeader" disabled></textarea>\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        <div class="col-md-12">\n                            <span style="float:right; margin-top:5px">\n                                <button class="btn btn-secondary" ng-click="formSignature()">Regenerate Base String And Signature</button>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<br>\n\n<div style=\'text-align:center\'>\n    <button type="button" class="btn btn-lg btn-success" ng-click="$ctrl.sendTestRequest()" ng-disabled="!$ctrl.canSendTestRequest()">\n        <span class="glyphicon glyphicon-transfer"></span> Send Test Request\n    </button>\n</div>\n\n<div ng-if="$ctrl.sendingTestRequest" class="spinner">\n    <div class="bounce1"></div>\n    <div class="bounce2"></div>\n    <div class="bounce3"></div>\n</div>\n\n<br>\n\n<div class="card" ng-if="$ctrl.apiTest">\n    <div class="card-header">\n        <div class="row" style=\'text-align:center\'>\n            <div class="col-sm-12">\n                <strong>API Test Response</strong>\n            </div>\n        </div>\n    </div>\n    <div class="card-body" ng-class="{\'bg-success\': $ctrl.apiTest.status < 300, \'bg-warning\': 300 <= $ctrl.apiTest.status && $ctrl.apiTest.status < 400, \'bg-danger\': (400 <= $ctrl.apiTest.status && $ctrl.apiTest.status < 600) || $ctrl.apiTest.status === -1}">\n        <div class="row">\n            <div class="col-sm-12 test-response">\n                <label for="apiTestConfig">API Test Request Config </label> \n                <textarea rows="4" name=apiTestConfig" id="apiTestConfig" class="form-control code" disabled>{{ $ctrl.apiTest.config.method }} {{ $ctrl.apiTest.config.url }}\n{{ $ctrl.getApiTestHeaders($ctrl.apiTest.config.headers) }}\n                </textarea>\n\n                <br>\n            \n                <strong>API Test Request Status:</strong> {{ $ctrl.apiTest.xhrStatus }}<span ng-if="$ctrl.apiTest.xhrStatus === \'error\'">: the http request could not be completed</span>\n\n                <br>\n\n                <strong>API Test Response Status:</strong> {{ $ctrl.apiTest.status }} {{ $ctrl.apiTest.statusText }}\n\n                <br>\n\n                <label for="apiTestResponse">API Test Response Data</label>\n                <textarea rows="4" name="apiTestResponse" id="apiTestResponse" class="form-control code" disabled>{{$ctrl.apiTest.data | json}}</textarea>\n            </div>            \n        </div>\n    </div>\n</div>\n</div>'};function $(e,n){var t=this;t.jwt_standards=["JWS","JWE"],t.selectedJWTStandard=t.jwt_standards[0],t.clearFields=function(){t.input="",t.key="",t.output=""},t.verifyJOSE=function(a,r,s){var o=void 0;try{if("Error"===(o="JWS"===a?e.verifyJWS(JSON.parse(r),s):e.decryptJWE(JSON.parse(r),s)).status)throw new Error(o.output);n.success("Verified"),t.output=JSON.stringify(o.output,null,2)}catch(e){t.output=e.message,n.error({message:e.message})}}}$.$inject=["$scope","JWTService","Notification"];var T={template:'\n<div class="container-fluid main-content">\n\n<h3>Apex JOSE Validator</h3>\n\n    <form name="joseForm">\n\n        <div class="row">\n            <div class="col-md-2">\n                <label for="jwt-standard">JOSE Standard</label>\n                <select ng-options="o as o for o in $ctrl.jwt_standards" ng-model="$ctrl.selectedJWTStandard" \n                        ng-change="$ctrl.clearFields()" class="form-control" id="jwt-standard">\n                </select>\n            </div>\n        </div>\n\n        <hr>\n\n        <div class="row">\n            <div class="col-md-12">\n                <h4>Verify JWT</h4>\n                <label for="jwt-response">JSON serialized JWT response from APEX</label>\n                <textarea rows="12" class="form-control code" ng-model="$ctrl.input" id="jwt-response" name="res"\n                        placeholder="Paste API response here"  required>\n                </textarea>\n                <span ng-show="joseForm.res.$touched && joseForm.res.$invalid" class="fail">\n                    Response is required.\n                </span>\n            </div>\n        </div>\n        \n        <div class="row">\n            <div class="col-md-12">\n                <label for="key-content" ng-if=\'$ctrl.selectedJWTStandard === "JWS"\'>\n                    Public Certificate/Key to verify JWT signature\n                </label>\n\n                <label for="key-content" ng-if=\'$ctrl.selectedJWTStandard === "JWE"\'>\n                    Private Key to decrypt JWT\n                </label>\n                \n                <textarea rows="12" class="form-control code" ng-model="$ctrl.key" id="key-content" name="keycontent"\n                        placeholder="Paste or load certificate/key contents here" required>\n                </textarea>\n                <span ng-show="joseForm.keycontent.$touched && joseForm.keycontent.$invalid" class="fail">\n                    Key Content is required.\n                </span>\n            </div>\n        </div>\n\n        <div class="row">\n            <div class="col-md-12" style="text-align: center; margin: 5px;">\n                <input type="button" value="Verify JWT" class="btn btn-primary btn-lg" ng-disabled="joseForm.$invalid"\n                        ng-click="$ctrl.verifyJOSE($ctrl.selectedJWTStandard, $ctrl.input, $ctrl.key)">\n            </div>\n        </div>\n\n        <div class="row>\n            <div class="col-md-12">\n                <h4>Output</h4>\n                <label for="verification-results">Verification results</label>\n                <textarea rows="8" class="form-control code" ng-model="$ctrl.output" id="verification-results"\n                        placeholder="Parsed Output"></textarea>\n            </div>\n        </div>\n    </form>\n</div>',controller:$},k={gatewayZones:{internet:"Internet Gateway",intranet:"Intranet Gateway"},strings:{signatureUrl:"Apex API domains (api.gov.sg) need to have subdomains .i (intranet gateway) or .e (internet gateway) inserted for signing."},requestBodyTypes:["none","application/json","application/x-www-form-urlencoded"]},q={constants:k,main:{appVersion:"1.0",sigMethod:{level1:"HMACSHA256",level2:"SHA256withRSA"},httpMethods:["GET","POST","PUT","DELETE"],callerZone:["WWW","Internet Zone","Intranet Zone","SGNet"],providerGateway:[k.gatewayZones.internet,k.gatewayZones.intranet],authLevels:[0,1,2],defaultGateway:"apex_example_gateway",defaultUri:"/apex/example/path",authPrefix:{internet:{l1:"apex_l1_eg",l2:"apex_l2_eg"},intranet:{l1:"apex_l1_ig",l2:"apex_l2_ig"}},notificationShowTime:5e3,errorMessages:{noSelectedGateway:"Gateway must be specified",noAuthPrefix:"Auth prefix must be specified",noAppId:"Application Id must be specified",noAppSecret:"Application Secret must be specified",timestampInvalid:"Timestamp must be specified if not autogenerated",nonceInvalid:"Nonce must be specified if not autogenerated",noPemProvided:"Please load or enter a valid PEM formatted private key",pemSecretInvalid:"Please verify that both pem string and secret are correct",pkeyInvalid:"Error verifying private key: check that both private key and its passphrase are correct",httpRequestError:"Error making HTTP request. Please make sure that your URL is correct, or CORS is enabled on the API.",httpRequestFullError:"Error encountered while making the request. Please refer to the readme at https://github.com/GovTechSG/apex-signature-validator for possible causes."}},sign:{beginPrivateKeyHeader:/-----BEGIN ([A-Z]+ )*PRIVATE KEY-----/,endPrivateKeyHeader:/-----END ([A-Z]+ )*PRIVATE KEY-----/},test:{levels:[0,1,2]}},P=t(257),B=t(106),U=t.n(B);function C(e,n,t){return{generateBasestring:function(e){var n=new URL(e.signatureUrl);if("http:"!==n.protocol&&"https:"!==n.protocol)throw new Error("Only http and https protocols are supported");delete n.port;var t=n.origin+n.pathname,a={},r=e.authPrefix.toLowerCase()+"_app_id",s=e.authPrefix.toLowerCase()+"_nonce",o=e.authPrefix.toLowerCase()+"_signature_method",i=e.authPrefix.toLowerCase()+"_timestamp",l=e.authPrefix.toLowerCase()+"_version";a[r]=e.appId,a[s]=e.nonce,a[o]=e.signatureMethod,a[i]=e.timestamp,a[l]=e.appVersion;var c=A(a);if(null!=n.search&&n.search.length>0){var d=U.a.parse(n.search.slice(1));c=c.concat(A(d))}null!=e.queryString&&(c=c.concat(A(e.queryString))),null!=e.formData&&(c=c.concat(A(e.formData)));var p=c.sort().map(function(e){return e.length>1&&""===e[1]?e[0]:e.join("=")}).join("&");return e.httpMethod.toUpperCase()+"&"+t+"&"+p},signBasestring:function(e,t,a){var r,s;if(2===e){(r=new v.a.crypto.Signature({alg:"SHA256withRSA"})).init(a),r.updateString(t);var o=r.sign();s=n.hexToBase64(o)}else if(1===e){(r=new v.a.crypto.Mac({alg:"HmacSHA256",pass:{hex:n.ascii_to_hexa(a)}})).updateString(t);var i=r.doFinal();s=n.hexToBase64(i)}return s},genAuthHeader:function(e,n){var t=e.realm||e.appId,a=e.authPrefix;return"".concat(a.charAt(0).toUpperCase()).concat(a.slice(1),' realm="').concat(t,'", ')+"".concat(a,'_app_id="').concat(e.appId,'", ')+"".concat(a,'_nonce="').concat(e.nonce,'", ')+"".concat(a,'_signature_method="').concat(e.signatureMethod,'", ')+"".concat(a,'_signature="').concat(n,'", ')+"".concat(a,'_timestamp="').concat(e.timestamp,'", ')+"".concat(a,'_version="').concat(e.appVersion,'"')},sendTestRequest:function(n,a,r,s){var o={method:a,url:n,headers:{},timeout:1e4};return"GET"!==a&&s.requestBody&&("application/x-www-form-urlencoded"===s.requestBodyType?(o.data=t(s.requestBody),o.headers["Content-Type"]="application/x-www-form-urlencoded"):o.data=s.requestBody),0!==r&&(o.headers.Authorization=s.authHeader),e(o)}}}function A(e){var n=U.a.parse(U.a.stringify(e)),t=[];return Object.keys(n).forEach(function(e){Array.isArray(n[e])?n[e].forEach(function(n){t.push([e,n])}):t.push([e,n[e]])}),t}C.$inject=["$http","UtilityService","$httpParamSerializerJQLike"];var L=C;var I=function(){return{hexToBase64:function(e){return btoa(e.match(/\w{2}/g).map(function(e){return String.fromCharCode(parseInt(e,16))}).join(""))},ascii_to_hexa:function(e){for(var n=[],t=0,a=e.length;t<a;t++){var r=Number(e.charCodeAt(t)).toString(16);n.push(r)}return n.join("")},sortJSON:function(e){var n={},t=Object.keys(e);t.sort();for(var a=0;a<t.length;a++){var r=t[a];n[r]=e[r]}return n}}};t(569);r.a.module("app",[o.a,l.a,d.a]).constant("config",q).controller("mainController",m).factory("TestService",L).factory("JWTService",P.a).factory("UtilityService",I).config(["$stateProvider","$urlRouterProvider",function(e,n){e.state({name:"signatureValidator",url:"/signature-validator",controller:x.controller,controllerAs:"$ctrl",template:x.template}).state({name:"joseValidator",url:"/jose-validator",controller:T.controller,controllerAs:"$ctrl",template:T.template}),n.otherwise("/signature-validator")}]).directive("onReadFile",["$parse",function(e){return{restrict:"A",scope:!1,link:function(n,t,a){var r=e(a.onReadFile);t.on("change",function(e){var a=new FileReader;a.onload=function(e){n.$apply(function(){r(n,{$fileContents:e.target.result})})},a.readAsText((e.srcElement||e.target).files[0]),t.val("")})}}}])}});