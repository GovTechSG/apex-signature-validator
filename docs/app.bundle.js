!function(e){function n(n){for(var a,s,o=n[0],l=n[1],c=n[2],u=0,p=[];u<o.length;u++)s=o[u],r[s]&&p.push(r[s][0]),r[s]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);for(d&&d(n);p.length;)p.shift()();return i.push.apply(i,c||[]),t()}function t(){for(var e,n=0;n<i.length;n++){for(var t=i[n],a=!0,o=1;o<t.length;o++){var l=t[o];0!==r[l]&&(a=!1)}a&&(i.splice(n--,1),e=s(s.s=t[0]))}return e}var a={},r={0:0},i=[];function s(n){if(a[n])return a[n].exports;var t=a[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,s),t.l=!0,t.exports}s.m=e,s.c=a,s.d=function(e,n,t){s.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,n){if(1&n&&(e=s(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(s.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)s.d(t,a,function(n){return e[n]}.bind(null,a));return t},s.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(n,"a",n),n},s.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},s.p="";var o=window.webpackJsonp=window.webpackJsonp||[],l=o.push.bind(o);o.push=n,o=o.slice();for(var c=0;c<o.length;c++)n(o[c]);var d=l;i.push([667,1]),t()}({172:function(e,n,t){"use strict";(function(e){var a=t(118),r=t.n(a),i=t(71),s=t.n(i);n.a={verifyJWS:function(n,t){try{return{result:r.a.jwa(n.header.alg).verify(e.from(n.protected+"."+n.payload),s.a.decode(n.signature),t),output:JSON.parse(s.a.decode(n.payload).toString("utf8"))}}catch(e){return{status:"Error",output:"Failed to verify JWS "+e}}},decryptJWE:function(n,t){try{var a=s.a.decode(n.ciphertext),i=e.from(n.tag,"base64"),o=e.from(n.protected,"ascii"),l=s.a.decode(n.iv),c=s.a.decode(n.encrypted_key),d=new r.a.jwa(n.header.alg).unwrapKey(c,t),u=new r.a.jwa(n.header.enc).decrypt(a,i,o,l,d);return{result:!0,output:JSON.parse(u.toString())}}catch(e){return{status:"Error",output:"Failed to decrypt JWE "+e}}}}}).call(this,t(2).Buffer)},281:function(e,n,t){e.exports=t.p+"assets/logo_apex.png"},283:function(e,n){e.exports='<div class="container-fluid main-content">\n\n    <h3 style="display: inline-block">Apex Signature Validator</h3>\n    <h5 ng-click="$ctrl.showOptions()" style="float: right">\n        <a href><i class="fas fa-cogs"></i> Load/save API config From JSON</a>\n    </h5>\n    \n    <div class="card">\n        <h4 class="card-header text-center">        \n            <span class="badge badge-primary">1</span> HTTP Request parameters           \n        </h4>\n    \n        <div class="card-body">\n            <form name="httpRequestForm">        \n                <div class="form-row">\n                    <div class="form-group col-sm-2">\n                        <label for="httpMethodSelector">Request</label>\n                        <select id="httpMethodSelector"\n                            ng-change="$ctrl.onHttpMethodChange()"\n                            ng-options="httpMethod for httpMethod in $ctrl.httpMethods" \n                            ng-model="$ctrl.httpMethod"\n                            class="form-control">\n                        </select>\n                    </div>\n\n                    <div class="form-group col-sm-10">\n                        <label for="apiUrl">API URL</label>\n    \n                        <input type="text" \n                            autocomplete="off" \n                            class="form-control" \n                            name="apiUrl" \n                            id="apiUrl"\n                            ng-change="$ctrl.onApiUrlChange()"\n                            ng-model="$ctrl.apiUrl"\n                            required\n                            placeholder="https://mygateway.api.gov.sg/myservice/api/v1/users">\n                        \n                        <span ng-show="httpRequestForm.apiUrl.$touched && httpRequestForm.apiUrl.$invalid" \n                            class="fail">\n                            API URL is required.\n                        </span>\n                    </div>\n                </div>\n                        \n                <div class="row">\n                    <div class="col-md-12">\n                        <label>Request body</label>\n\n                        <div class="form-check form-check-inline" \n                            ng-repeat="requestBodyType in config.constants.requestBodyTypes">\n                            <label class="form-check-label">\n                                <input type="radio"\n                                    class="form-check-input"\n                                    name="requestBodyType" \n                                    ng-model="$ctrl.requestBodyType" \n                                    value="{{requestBodyType}}"\n                                    ng-disabled="$ctrl.httpMethod === \'GET\'">\n                                {{requestBodyType}}\n                            </label>\n                        </div>\n                        <a href\n                            ng-click="$ctrl.addUrlencodedBody(\'\',\'\')"\n                            ng-if="$ctrl.requestBodyType === \'application/x-www-form-urlencoded\'"> \n                            <i class="fas fa-plus"></i> Add\n                        </a>\n                    </div>\n                </div>\n                <div class="row" ng-if="$ctrl.requestBodyType !== config.constants.requestBodyTypes[0]">\n                    <div class="col-md-12">\n                        <textarea class="form-control code" \n                            ng-if="$ctrl.requestBodyType === \'application/json\'"\n                            ng-model="$ctrl.requestBody.json">\n                        </textarea>\n\n                        <fieldset class="form-group" \n                            ng-if="$ctrl.requestBodyType === \'application/x-www-form-urlencoded\'">\n                            <div class="row" \n                                ng-repeat="kvpair in $ctrl.requestBody.urlencoded">\n                                <div class="col-6">\n                                    <div class="form-group row">\n                                        <label class="col-2 col-form-label" \n                                            for="{{ \'urlencodedBodyKey\' + $index }}">\n                                            Key\n                                        </label>\n                                        <div class="col-10">\n                                            <input type="text" \n                                                id="{{ \'urlencodedBodyKey\' + $index }}" \n                                                class="form-control" \n                                                ng-model="kvpair.key"\n                                                ng-change="$ctrl.onRequestBodyChange()">\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                <div class="col-5">\n                                    <div class="form-group row">\n                                        <label class="col-2 col-form-label" \n                                            for="{{ \'urlencodedBodyValue\' + $index }}">\n                                            Value\n                                        </label>\n                                        <div class="col-10">\n                                            <input type="text" \n                                                id="{{ \'urlencodedBodyValue\' + $index }}"\n                                                class="form-control" \n                                                ng-model="kvpair.value" \n                                                ng-change="$ctrl.onRequestBodyChange()">\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                <div class="col-md-1">\n                                    <button type="button" class="btn btn-danger" ng-click="$ctrl.removeUrlencodedBody($index)">\n                                        <i class="fas fa-times"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </fieldset>\n                    </div>\n                </div>                             \n            </form>\n        </div>\n    </div>\n    \n    <br>\n    \n    <div class="card">\n        <div class="card-header">\n            <div class="row">\n                <div class="col-sm-12" style="text-align:center">\n                    <h4 style="display:inline-block"><span class="badge badge-primary">2</span> Apex Signatures</h4> <small><a href="http://docs.akana.com/docs-test/cm/learnmore/app_security.htm">Learn more</a></small>            \n                </div>\n            </div>\n        </div>\n    \n        <div class="card-body">\n            <div ng-repeat="signature in $ctrl.signatures">\n                <div class="card signature">\n                    <div class="card-header">\n                        <h5>Signature {{$index + 1}}</h5>\n                        <button type="button"\n                            class="btn btn-danger"\n                            ng-click="$ctrl.removeSignature($index)"\n                            >\n                            Remove signature\n                        </button>\n                    </div>\n                    <div class="card-body">\n                        <form name="auth-params-form-{{$index}}">\n                            <div class="row">\n                                <div class="col">\n                                    <label>Authentication level</label>\n                                    <div class="form-check form-check-inline" ng-repeat="level in $ctrl.authLevels">\n                                        <input\n                                            class="form-check-input" \n                                            type="radio"\n                                            id="signature-{{$parent.$index}}-auth-level-{{level}}"\n                                            name="signature-{{$parent.$index}}-auth-level-{{level}}" \n                                            ng-value="level" \n                                            ng-model="signature.authLevel"\n                                            ng-change="$ctrl.onSignatureParameterChange(signature)">\n                                        \n                                        <label class="form-check-label" \n                                            for="signature-{{$parent.$index}}-auth-level-{{level}}">\n                                            {{level}}\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n    \n                            <div class="row">\n                                <div class="col">\n                                    <label>Gateway zone </label>\n                                    <div class="form-check form-check-inline" ng-repeat="gatewayZone in $ctrl.gatewayZoneOptions">\n                                        <input\n                                            class="form-check-input"\n                                            type="radio"\n                                            id="signature-{{$parent.$index}}-gateway-zone-{{gatewayZone}}"\n                                            name="signature-{{$parent.$index}}-gateway-zone-{{gatewayZone}}"\n                                            ng-value="gatewayZone"\n                                            ng-model="signature.gatewayZone"\n                                            ng-change="$ctrl.onSignatureParameterChange(signature)">\n    \n                                        <label class="form-check-label" \n                                            for="signature-{{$parent.$index}}-gateway-zone-{{gatewayZone}}">\n                                            {{gatewayZone}}\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="col">\n                                    <label for="signature-url-{{$index}}">Signature URL</label> \n                                        \n                                    <i class="fas fa-info-circle" tooltip-placement="top" uib-tooltip="{{ config.constants.strings.signatureUrl }}"></i>\n    \n                                    <div class="input-group">\n                                        <input required\n                                            type="text"\n                                            name="signature-url-{{$index}}" \n                                            id="signature-url-{{$index}}" \n                                            class="form-control" \n                                            placeholder="https://mygateway.api.gov.sg/myservice/api/v1/users"\n                                            ng-model="signature.signatureUrl" \n                                            ng-disabled="!signature.allowCustomSignatureUrl" \n                                            ng-change="$ctrl.onSignatureParameterChange(signature)">\n                                        <div class="input-group-append">   \n                                            <div class="input-group-text">\n                                                <input name="signature-url-{{$index}}-allow-custom"\n                                                    id="signature-url-{{$index}}-allow-custom"\n                                                    type="checkbox" \n                                                    ng-model="signature.allowCustomSignatureUrl"\n                                                    ng-change="$ctrl.onAllowCustomSignatureUrlChange(signature)">\n                                                    &nbsp;\n                                                <label for="signature-url-{{$index}}-allow-custom"\n                                                    style="margin-bottom: 0"> \x3c!-- override bootstrap label\'s margin-bottom so label stays within input group --\x3e\n                                                    Custom\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <br>\n    \n                            <div class="row">\n                                <div ng-class="{\'col-md-6\': signature.authLevel === 2, \'col-md-4\': signature.authLevel === 1}">\n                                    <label for="signature-auth-prefix-{{$index}}">Auth Prefix</label>\n    \n                                    <input type="text" \n                                        required \n                                        disabled\n                                        class="form-control"\n                                        name="signature-auth-prefix-{{$index}}" \n                                        id="signature-auth-prefix-{{$index}}" \n                                        ng-model="signature.authPrefix"\n                                        ng-model-options="{ getterSetter: true }"\n                                        ng-change="$ctrl.onSignatureParameterChange(signature)">\n    \n                                    <span class="fail"\n                                        ng-show="auth-params-form-{{$index}}[\'signature-auth-prefix-{{$index}}\'].$touched && \n                                                 auth-params-form-{{$index}}[\'signature-auth-prefix-{{$index}}\'].$invalid">\n                                        Auth Prefix is required.\n                                    </span>\n                                </div>\n    \n                                <div ng-class="{\'col-md-6\': signature.authLevel === 2, \'col-md-4\': signature.authLevel === 1}">\n                                    <label for="signature-app-id-{{$index}}">Application ID</label>\n    \n                                    <input type="text" \n                                        name="signature-app-id-{{$index}}" \n                                        id="signature-app-id-{{$index}}" \n                                        class="form-control" \n                                        required\n                                        ng-model="signature.appId" \n                                        ng-change="$ctrl.onSignatureParameterChange(signature)">\n    \n                                    <span class="fail"\n                                        ng-show="auth-params-form-{{$index}}[\'signature-app-id-{{$index}}\'].$touched && \n                                                 auth-params-form-{{$index}}[\'signature-app-id-{{$index}}\'].$invalid">\n                                        App Id is required.\n                                    </span>\n                                </div>\n    \n                                <div class="col-md-4" ng-if="signature.authLevel === 1">\n                                    <label for="signature-app-secret-{{$index}}">Application Secret</label>\n    \n                                    <input type="text" \n                                        name="signature-app-secret-{{$index}}" \n                                        id="signature-app-secret-{{$index}}" \n                                        required \n                                        class="form-control"\n                                        ng-model="signature.appSecret">\n    \n                                    <span class="fail"\n                                        ng-show="auth-params-form-{{$index}}[\'signature-app-secret-{{$index}}\'].$touched && \n                                                 auth-params-form-{{$index}}[\'signature-app-secret-{{$index}}\'].$invalid">\n                                        App Secret is required.\n                                    </span>\n                                </div>\n                            </div>\n    \n                            <br>\n    \n                            <div class="row">\n                                <div class="col-md-6">\n                                    <label for="signature-type-{{$index}}">Signature Type</label>\n                                    <input type="text"\n                                        class="form-control" \n                                        name="signature-type-{{$index}}" \n                                        id="signature-type-{{$index}}" \n                                        disabled\n                                        ng-model="signature.signatureType"\n                                        ng-model-options="{ getterSetter: true }">\n                                </div>\n    \n                                <div class="col-md-6">\n                                    <label for="signature-app-version-{{$index}}">App Version</label>\n                                    <input type="text" \n                                        class="form-control" \n                                        name="signature-app-version-{{$index}}" \n                                        id="signature-app-version-{{$index}}" \n                                        ng-model="signature.appVersion"\n                                        disabled>\n                                </div>\n                            </div>\n    \n                            <br>\n    \n                            <div class="row">\n                                <div class="col-md-6">\n                                    <label for="signature-timestamp-{{$index}}">Timestamp</label>\n\n                                    <div class="input-group">\n                                        <input type="number"\n                                            class="form-control" \n                                            required \n                                            name="signature-timestamp-{{$index}}" \n                                            id="signature-timestamp-{{$index}}"\n                                            ng-model="signature.timestamp"\n                                            ng-change="$ctrl.onSignatureParameterChange(signature)">\n                                        <div class="input-group-append">\n                                            \x3c!-- ng-click calls onSignatureParameterChange manually; ng-change for timestamp only listens to input change. --\x3e\n                                            <button class="btn btn-primary btn-sm"\n                                                ng-click="signature.generateTimestamp(); $ctrl.onSignatureParameterChange(signature)"\n                                                type="button">\n                                                Generate\n                                            </button>\n                                        </div>\n                                    </div>\n                                        \n                                    <span ng-show="auth-params-form-{{$index}}[\'signature-timestamp-{{$index}}\'].$touched && \n                                                   auth-params-form-{{$index}}[\'signature-timestamp-{{$index}}\'].$invalid" \n                                        class="fail">\n                                        Timestamp is required.\n                                    </span>\n                                </div>\n                                <div class="col-md-6">\n                                    <label for="nonce">Nonce</label>\n\n                                    <div class="input-group">\n                                        <input type="text"\n                                            class="form-control"\n                                            required\n                                            name="signature-nonce-{{$index}}" \n                                            id="signature-nonce-{{$index}}"\n                                            ng-model="signature.nonce"\n                                            ng-change="$ctrl.onSignatureParameterChange(signature)">\n                                        <div class="input-group-append">\n                                            \x3c!-- ng-click calls onSignatureParameterChange manually; ng-change for nonce only listens to input change. --\x3e\n                                            <button class="btn btn-primary btn-sm"\n                                                ng-click="signature.generateNonce(); $ctrl.onSignatureParameterChange(signature)"\n                                                type="button">\n                                                Generate\n                                            </button>\n                                        </div>\n                                    </div>\n                                    \n                                    <span ng-show="auth-params-form-{{$index}}[\'signature-nonce-{{$index}}\'].$touched && \n                                                   auth-params-form-{{$index}}[\'signature-nonce-{{$index}}\'].$invalid" \n                                        class="fail">\n                                        Nonce is required.\n                                    </span>\n                                </div>\n                            </div>\n    \n                            <br>\n    \n                            <div ng-if="signature.authLevel === 2">\n                                <div class="row">\n                                    <div class="col">\n                                        <label for="signature-pem-{{$index}}">Private key (PEM)</label>\n                                        <small><input type="file" on-read-file="signature.loadPkey($fileContents)" style="display:inline"></small>\n                                    </div>\n                                </div>\n\n                                <div class="row">\n                                    <div class="col">\n                                        <textarea \n                                            rows="10"\n                                            cols="65"\n                                            class="form-control code" \n                                            name="signature-pem-{{$index}}" \n                                            id="signature-pem-{{$index}}" \n                                            required\n                                            ng-model="signature.pem">\n                                        </textarea>\n                                        <span ng-show="auth-params-form-{{$index}}[\'signature-pem-{{$index}}\'].$touched && \n                                                       auth-params-form-{{$index}}[\'signature-pem-{{$index}}\'].$invalid" \n                                            class="fail">\n                                            Pem string is required.\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <br>\n\n                                <div class="row">\n                                    <div class="col">\n                                        <label for="signature-pem-secret-{{$index}}">Password for private key (if encrypted)</label>\n                                        <input type="password" \n                                            class="form-control" \n                                            name="signature-pem-secret-{{$index}}" \n                                            id="signature-pem-secret-{{$index}}"\n                                            ng-model="$ctrl.pkeySecret">\n                                        <p ng-if="signature.privateKeyError" \n                                            class="fail">{{ config.main.errorMessages.pkeyInvalid }}</p>\n                                    </div>\n                                </div>\n\n                                <br>\n                            </div>\n\n                            <uib-accordion>\n                                <div uib-accordion-group is-open="signature.showBaseString">\n                                    <uib-accordion-heading>\n                                        Base string\n                                        <i class="fas fa-angle-double-up" ng-show="signature.showBaseString"></i>\n                                        <i class="fas fa-angle-double-down" ng-show="!signature.showBaseString"></i>\n                                    </uib-accordion-heading>\n\n                                    <textarea rows="4" \n                                        disabled \n                                        class="form-control immutable code" \n                                        ng-model="signature.baseString"\n                                        name="signature-base-string-{{$index}}" \n                                        id="signature-base-string-{{$index}}">\n                                    </textarea>\n\n                                    \n                                    <label for="signature-base-string-to-compare-{{$index}}">Compare base strings</label>\n                                    <div class="input-group">\n                                        <textarea rows="4" \n                                            class="form-control code" \n                                            ng-model="signature.baseStringToCompare" \n                                            name="signature-base-string-to-compare-{{$index}}" \n                                            id="signature-base-string-to-compare-{{$index}}"></textarea>\n                                        <div class="input-group-append">\n                                            <button class="btn btn-secondary btn-sm"\n                                                type="button"\n                                                ng-click="$ctrl.compareBaseString(signature, signature.baseString, signature.baseStringToCompare)">\n                                                Compare\n                                            </button>\n                                        </div>\n                                    </div>\n\n                                    <div class="row" ng-if="signature.showBaseStringComparison">\n                                        <div class="col">\n                                            <label>Comparison Results</label>\n                                            <pre ng-bind-html="signature.baseStringComparison"></pre>\n                                        </div>\n                                    </div>\n                                </div>\n                            </uib-accordion>\n                        </form>\n                    </div>\n                </div>\n                <br>\n            </div>\n\n            <div style="text-align:center">\n                <button type="button" \n                    class="btn btn-success btn-lg" \n                    ng-click="$ctrl.addSignature($ctrl.signatures.length)">\n                    <i class="fas fa-plus"></i> Add signature\n                </button>\n            </div>\n        </div>\n    </div>\n    \n    <br>\n    \n    <div class="card">\n        <div class="card-header">\n            <div class="row">\n                <div class="col-sm-12" style="text-align:center">\n                    <h4>\n                        <span class="badge badge-primary">3</span>\n                        HTTP Authorization Header\n                    </h4>\n                </div>\n            </div> \n        </div>\n    \n        <div class="card-body">\n            <div class="row" style="text-align:center" ng-if="$ctrl.signatures.length === 0">\n                <div class="col">\n                    <strong>Add a signature to view HTTP Authorization headers.</strong>\n                </div>\n            </div>\n            <div class="row" ng-if="$ctrl.signatures.length > 0">\n                <div class="col">\n                    <label for="authHeader">Request Authorization Header</label>\n                    <div class="input-group">\n                        <textarea rows="6" name="authHeader" id="authHeader"\n                            class="form-control immutable code" \n                            ng-model="$ctrl.authHeader" disabled></textarea>\n                        <div class="input-group-append">\n                            <button type="button"\n                                class="btn btn-primary"\n                                ng-click="$ctrl.generateAuthHeader()"\n                                ng-disabled="!$ctrl.allBaseStringsFormed()">\n                                Generate\n                            </button>\n                        </div>\n                    </div>                    \n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <br>\n    \n    <div style=\'text-align:center\'>\n        <button type="button" \n            class="btn btn-lg btn-success" \n            ng-click="$ctrl.sendTestRequest()" \n            ng-disabled="!$ctrl.canSendTestRequest()">\n            <span class="fas fa-exchange-alt"></span>\n            Send Test Request\n        </button>\n    </div>\n    \n    <div ng-if="$ctrl.sendingTestRequest" class="spinner">\n        <div class="bounce1"></div>\n        <div class="bounce2"></div>\n        <div class="bounce3"></div>\n    </div>\n    \n    <br>\n    \n    <div class="card" ng-if="$ctrl.apiTest">\n        <div class="card-header">\n            <div style="display: flex; justify-content: space-between; align-items:center">\n                <strong>API Test Response</strong>\n                <button type="button"\n                    class="btn btn-danger"\n                    ng-click="$ctrl.apiTest = null">\n                    <i class="fas fa-times"></i>\n                </button>\n            </div>\n        </div>\n        <div class="card-body" ng-class="$ctrl.getApiTestResponseClass()">\n            <div class="row">\n                <div class="col-sm-12 test-response">\n                    <label for="apiTestConfig">API Test Request Config </label> \n                    \x3c!-- whitespace must be preserved within the textarea below --\x3e\n                    <textarea rows="4" name="apiTestConfig" id="apiTestConfig" class="form-control code" disabled>{{ $ctrl.apiTest.config.method }} {{ $ctrl.apiTest.config.url }}\n\n{{ $ctrl.getApiTestHeaders($ctrl.apiTest.config.headers) }}\n                    </textarea>\n    \n                    <br>\n                \n                    <strong>API Test Request Status:</strong> {{ $ctrl.apiTest.xhrStatus }}<span ng-if="$ctrl.apiTest.xhrStatus === \'error\'">: the http request could not be completed</span>\n    \n                    <br>\n    \n                    <strong>API Test Response Status:</strong> {{ $ctrl.apiTest.status }} {{ $ctrl.apiTest.statusText }}\n    \n                    <br>\n    \n                    <label for="apiTestResponse">API Test Response Data</label>\n                    <textarea rows="4" name="apiTestResponse" id="apiTestResponse" class="form-control code" disabled>{{$ctrl.apiTest.data | json}}</textarea>\n                </div>            \n            </div>\n        </div>\n    </div>\n</div>'},284:function(e,n){e.exports='<div class="container-fluid main-content">\n\n    <h3>Apex JOSE Validator</h3>\n\n    <form name="joseForm">\n\n        <div class="row">\n            <div class="col-md-2">\n                <label for="jwt-standard">JOSE Standard</label>\n                <select ng-options="o as o for o in $ctrl.jwt_standards" ng-model="$ctrl.selectedJWTStandard" ng-change="$ctrl.clearFields()"\n                    class="form-control" id="jwt-standard">\n                </select>\n            </div>\n        </div>\n\n        <hr>\n\n        <div class="row">\n            <div class="col-md-12">\n                <h4>Verify JWT</h4>\n                <label for="jwt-response">JSON serialized JWT response from APEX</label>\n                <textarea rows="12" class="form-control code" ng-model="$ctrl.input" id="jwt-response" name="res"\n                    placeholder="Paste API response here" required>\n                        </textarea>\n                <span ng-show="joseForm.res.$touched && joseForm.res.$invalid" class="fail">\n                    Response is required.\n                </span>\n            </div>\n        </div>\n\n        <div class="row">\n            <div class="col-md-12">\n                <label for="key-content" ng-if=\'$ctrl.selectedJWTStandard === "JWS"\'>\n                    Public Certificate/Key to verify JWT signature\n                </label>\n\n                <label for="key-content" ng-if=\'$ctrl.selectedJWTStandard === "JWE"\'>\n                    Private Key to decrypt JWT\n                </label>\n\n                <textarea rows="12" class="form-control code" ng-model="$ctrl.key" id="key-content" name="keycontent"\n                    placeholder="Paste or load certificate/key contents here" required>\n                        </textarea>\n                <span ng-show="joseForm.keycontent.$touched && joseForm.keycontent.$invalid" class="fail">\n                    Key Content is required.\n                </span>\n            </div>\n        </div>\n\n        <div class="row">\n            <div class="col-md-12" style="text-align: center; margin: 5px;">\n                <input type="button" value="Verify JWT" class="btn btn-primary btn-lg" ng-disabled="joseForm.$invalid"\n                    ng-click="$ctrl.verifyJOSE($ctrl.selectedJWTStandard, $ctrl.input, $ctrl.key)">\n            </div>\n        </div>\n\n        <div class="row">\n            <div class="col-md-12">\n                <h4>Output</h4>\n                <label for="verification-results">Verification results</label>\n                <textarea rows="8" class="form-control code" ng-model="$ctrl.output" id="verification-results"\n                    placeholder="Parsed Output"></textarea>\n            </div>\n        </div>\n    </form>\n</div>'},568:function(e,n){},570:function(e,n){},605:function(e,n){},606:function(e,n){},665:function(e,n,t){var a=t(666);"string"==typeof a&&(a=[[e.i,a,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};t(78)(a,r);a.locals&&(e.exports=a.locals)},666:function(e,n,t){(e.exports=t(77)(!1)).push([e.i,".test-response textarea {\n    min-height: 8em;\n    max-height: 30em;\n}\n\n.auth-level-buttons {\n    display: inline-block;\n}\n\n.pass {\n    color: green;\n}\n\n.fail {\n    font-style: italic;\n    color: red;\n}\n\n.immutable {\n    color: green;\n}\n\n.point-cursor {\n    cursor: pointer;\n}\n\n.uri-preview {\n    font-size: 16px;\n}\n\n.heading {\n    font-size: 22px;\n    margin-bottom: 15px;\n}\n\n#main-navbar {\n    padding-top: 5px;\n    padding-bottom: 5px;\n}\n\n.main-content {\n    padding-left: 40px;\n    padding-right: 40px;\n    margin-bottom: 50px;\n}\n\n.test-send-success {\n    background-color: lightgreen;\n}\n\n.test-send-fail {\n    background-color: lightsalmon;\n}\n\n.test-send {\n    background-color: #ededed;\n}\n\n.inline {\n    display: inline;\n}\n\n.missing-basestring-char {\n    background-color: #ff7762\n}\n\n.incorrect-basestring-char {\n    /*background-color: #FFFF00;*/\n    background-color: #ffef96;\n}\n\n.extra-basestring-char {\n    text-decoration: line-through;\n    color: #ff7762;\n}\n\npre, .wrap {\n    white-space: pre-wrap; /* css-3 */\n    white-space: -moz-pre-wrap; /* Mozilla, since 1999 */\n    white-space: -pre-wrap; /* Opera 4-6 */\n    white-space: -o-pre-wrap; /* Opera 7 */\n    word-wrap: break-word; /* Internet Explorer 5.5+ */\n}\n\n.code {\n    font-family: monospace;\n}\n\n.signature > .card-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n/* --- Loading Animations --- */\n.spinner {\n    margin: 100px auto 0;\n    width: 70px;\n    text-align: center;\n}\n\n.spinner > div {\n    width: 18px;\n    height: 18px;\n    background-color: #333;\n\n    border-radius: 100%;\n    display: inline-block;\n    -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n    animation: sk-bouncedelay 1.4s infinite ease-in-out both;\n}\n\n.spinner .bounce1 {\n    -webkit-animation-delay: -0.32s;\n    animation-delay: -0.32s;\n}\n\n.spinner .bounce2 {\n    -webkit-animation-delay: -0.16s;\n    animation-delay: -0.16s;\n}\n\n@-webkit-keyframes sk-bouncedelay {\n    0%, 80%, 100% {\n        -webkit-transform: scale(0)\n    }\n    40% {\n        -webkit-transform: scale(1.0)\n    }\n}\n\n@keyframes sk-bouncedelay {\n    0%, 80%, 100% {\n        -webkit-transform: scale(0);\n        transform: scale(0);\n    }\n    40% {\n        -webkit-transform: scale(1.0);\n        transform: scale(1.0);\n    }\n}\n\n/*-------------------------------*/",""])},667:function(e,n,t){"use strict";t.r(n);t(285);var a=t(171),r=t.n(a),i=t(278),s=t.n(i),o=t(279),l=t.n(o),c=t(280),d=t.n(c),u=(t(474),t(477),t(480),t(487),t(489),t(281)),p=t.n(u);function g(){this.apexLogo=p.a,this.version="1.3.1"}g.$inject=[];var h=g,f=t(88),m=t.n(f),v=t(57),y=t.n(v),b=t(39),w=t.n(b),x=t(282),$=t.n(x),S=t(117),T=t.n(S),q={gatewayZones:{internet:"Internet Gateway",intranet:"Intranet Gateway"},strings:{signatureUrl:"Apex API domains (api.gov.sg) need to have subdomains .i (intranet gateway) or .e (internet gateway) inserted for signing."},requestBodyTypes:["none","application/json","application/x-www-form-urlencoded"]},k={constants:q,main:{appVersion:"1.0",sigMethod:{level1:"HMACSHA256",level2:"SHA256withRSA"},httpMethods:["GET","POST","PUT","DELETE"],providerGateway:[q.gatewayZones.internet,q.gatewayZones.intranet],authLevels:[1,2],defaultGateway:"apex_example_gateway",defaultUri:"/apex/example/path",authPrefix:{internet:{l1:"apex_l1_eg",l2:"apex_l2_eg"},intranet:{l1:"apex_l1_ig",l2:"apex_l2_ig"}},notificationShowTime:5e3,errorMessages:{noSelectedGateway:"Gateway must be specified",noAuthPrefix:"Auth prefix must be specified",noAppId:"Application Id must be specified",noAppSecret:"Application Secret must be specified",timestampInvalid:"Timestamp must be specified if not autogenerated",nonceInvalid:"Nonce must be specified if not autogenerated",noPemProvided:"Please load or enter a valid PEM formatted private key",pemSecretInvalid:"Please verify that both pem string and secret are correct",signatureSecretInvalid:"Error obtaining signature; please double-check L1 app secret or L2 private key/passphrase.",httpRequestError:"Error making HTTP request. Please make sure that your URL is correct, or CORS is enabled on the API.",httpRequestFullError:"Error encountered while making the request. Please refer to the readme at https://github.com/GovTechSG/apex-signature-validator for possible causes."}},sign:{beginPrivateKeyHeader:/-----BEGIN ([A-Z]+ )*PRIVATE KEY-----/,endPrivateKeyHeader:/-----END ([A-Z]+ )*PRIVATE KEY-----/},test:{levels:[0,1,2]}};function B(e,n){var t;n||(n={}),this.formSignatureUrl(e),this.allowCustomSignatureUrl=n.allowCustomSignatureUrl,this.appId=n.appId,this.appVersion=n.appVersion||k.main.appVersion,this.authLevel=n.authLevel,this.gatewayZone=n.gatewayZone,this.timestamp=n.timestamp||(new Date).getTime(),this.nonce=n.nonce||w()(32).toString("base64"),this.showBaseString=!0,this.authPrefix=(t=this,function(){if(t.gatewayZone===k.constants.gatewayZones.internet)switch(t.authLevel){case 1:return"apex_l1_eg";case 2:return"apex_l2_eg";default:return""}else if(t.gatewayZone===k.constants.gatewayZones.intranet)switch(t.authLevel){case 1:return"apex_l1_ig";case 2:return"apex_l2_ig";default:return""}}),this.signatureType=function(e){return function(){switch(e.authLevel){case 0:return"";case 1:return k.main.sigMethod.level1;case 2:return k.main.sigMethod.level2}}}(this)}function C(e){var n=T.a.parse(T.a.stringify(e)),t=[];return Object.keys(n).forEach(function(e){Array.isArray(n[e])?n[e].forEach(function(n){t.push([e,n])}):t.push([e,n[e]])}),t}B.prototype.generateBaseString=function(e){if(!e)throw new Error("Error generating base string: http request options required.");if(y()(this.signatureUrl)||y()(this.appId||y()(this.timestamp)||y()(this.nonce)))this.baseString="";else{var n={signatureUrl:this.signatureUrl,authPrefix:this.authPrefix(),signatureMethod:this.signatureType(),appId:this.appId,httpMethod:e.httpMethod,appVersion:this.appVersion,nonce:this.nonce,timestamp:this.timestamp};this.baseStringOptions=n,"GET"!==e.httpMethod&&"application/x-www-form-urlencoded"===e.requestBodyType&&e.requestBody.urlencoded.length>0&&(n.formData=e.requestBody.urlencoded.reduce(function(e,n){return n.key&&n.value&&(e[n.key]=n.value),e},{})),this.baseString=function(e){var n=new URL(e.signatureUrl);if("http:"!==n.protocol&&"https:"!==n.protocol)throw new Error("Only http and https protocols are supported");delete n.port;var t=n.origin+n.pathname,a={},r=e.authPrefix.toLowerCase()+"_app_id",i=e.authPrefix.toLowerCase()+"_nonce",s=e.authPrefix.toLowerCase()+"_signature_method",o=e.authPrefix.toLowerCase()+"_timestamp",l=e.authPrefix.toLowerCase()+"_version";a[r]=e.appId,a[i]=e.nonce,a[s]=e.signatureMethod,a[o]=e.timestamp,a[l]=e.appVersion;var c=C(a);if(null!=n.search&&n.search.length>0){var d=T.a.parse(n.search.slice(1));c=c.concat(C(d))}null!=e.queryString&&(c=c.concat(C(e.queryString)));null!=e.formData&&(c=c.concat(C(e.formData)));var u=c.sort().map(function(e){return e.length>1&&""===e[1]?e[0]:e.join("=")}).join("&");return e.httpMethod.toUpperCase()+"&"+t+"&"+u}(n)}},B.prototype.generateTimestamp=function(){this.timestamp=(new Date).getTime()},B.prototype.generateNonce=function(){this.nonce=w()(32).toString("base64")},B.prototype.formSignatureUrl=function(e){if(!this.allowCustomSignatureUrl)if(""!==e&&e){var n=e.indexOf(".api.gov.sg");if(-1!==n){var t=e.substring(n),a=e.substring(0,n),r=this.gatewayZone===k.constants.gatewayZones.internet?"e":"i";this.signatureUrl="".concat(a,".").concat(r).concat(t)}else this.signatureUrl=e}else this.signatureUrl=""},B.prototype.loadPkey=function(e){this.pem=e},B.prototype.getConfig=function(){return $()(this,["signatureUrl","allowCustomSignatureUrl","appId","appVersion","authLevel","gatewayZone","timestamp","nonce"])};var P=B;function A(e,n,t){var a=this;a.currentConfig=t,a.currentConfigString=JSON.stringify(t,null,2),e.saveConfigAsJson=function(){var e=new Blob([a.currentConfigString],{type:"application/json;charset=utf-8;"}),n=angular.element("<a></a>");n.attr("href",window.URL.createObjectURL(e)),n.attr("download","savedInputs.json"),n[0].click()},e.set=function(){n.close(JSON.parse(a.currentConfigString))},e.cancel=function(){n.dismiss("cancelled")},e.parseInputFile=function(e){a.currentConfigString=JSON.stringify(JSON.parse(e),null,2)}}A.$inject=["$scope","$uibModalInstance","currentConfig"];var U={template:'\n<div class="modal-header">\n    <h3 class="modal-title">Save or load configuration</h3>\n</div>\n<div class="modal-body">\n    <label for="currentConfigString">Select JSON configuration file to load:</label>\n    <input type="file" on-read-file="parseInputFile($fileContents)" style="display:inline-block">\n    <textarea rows="20" cols="65" name="currentConfigString" id="currentConfigString" class="form-control code" ng-model="$ctrl.currentConfigString"></textarea>\n</div>\n<div class="modal-footer" style="justify-content:space-between">\n    <span>\n        <button class="btn btn-primary" type="button" ng-click="saveConfigAsJson()">\n            <i class="fas fa-save"></i>\n            Save as JSON\n        </button>\n    </span>\n    \n    <span ng-if="$ctrl.currentConfig.selectedLevel === 1" class="fail" style="">Warning! App secret will be saved in this config.</span>\n\n    <span>\n        <button class="btn btn-primary" type="button" ng-click="set()">\n            <span class="glyphicon glyphicon-ok"></span>\n            Set current config\n        </button>\n        \n        <button class="btn btn-danger" type="button" ng-click="cancel()">\n            <span class="glyphicon glyphicon-remove"></span>\n            Cancel\n        </button>\n    </span>\n    \n</div>',controller:A},R={hexToBase64:function(e){return btoa(e.match(/\w{2}/g).map(function(e){return String.fromCharCode(parseInt(e,16))}).join(""))},ascii_to_hexa:function(e){for(var n=[],t=0,a=e.length;t<a;t++){var r=Number(e.charCodeAt(t)).toString(16);n.push(r)}return n.join("")},sortJSON:function(e){var n={},t=Object.keys(e);t.sort();for(var a=0;a<t.length;a++){var r=t[a];n[r]=e[r]}return n},signBaseString:function(e,n,t){var a,r;if(2===e){(a=new m.a.crypto.Signature({alg:"SHA256withRSA"})).init(t),a.updateString(n);var i=a.sign();r=this.hexToBase64(i)}else if(1===e){(a=new m.a.crypto.Mac({alg:"HmacSHA256",pass:{hex:this.ascii_to_hexa(t)}})).updateString(n);var s=a.doFinal();r=this.hexToBase64(s)}return r},generateAuthToken:function(e,n){var t=e.realm||e.appId,a=e.authPrefix;return"".concat(a.charAt(0).toUpperCase()).concat(a.slice(1),' realm="').concat(t,'", ')+"".concat(a,'_app_id="').concat(e.appId,'", ')+"".concat(a,'_nonce="').concat(e.nonce,'", ')+"".concat(a,'_signature_method="').concat(e.signatureMethod,'", ')+"".concat(a,'_signature="').concat(n,'", ')+"".concat(a,'_timestamp="').concat(e.timestamp,'", ')+"".concat(a,'_version="').concat(e.appVersion,'"')}};function M(e,n,t,a,r){var i=this;function s(){i.authHeader="";for(var e=0;e<i.signatures.length;e++){var t=i.signatures[e];try{var a=void 0;1===t.authLevel&&(a=t.appSecret),2===t.authLevel&&(a=m.a.KEYUTIL.getKey(t.pem,t.pkeySecret));var r=R.signBaseString(t.authLevel,t.baseString,a),s=R.generateAuthToken(t.baseStringOptions,r);i.authHeader+=s,e!==i.signatures.length-1&&(i.authHeader+=", ")}catch(e){i.authHeader="",n.error({title:"",message:k.main.errorMessages.signatureSecretInvalid,delay:k.notificationShowTime})}}}function o(){return 0!==i.signatures.length&&i.signatures.reduce(function(e,n){return y()(n.baseString)&&(e=!1),e},!0)}function l(){var e=!0,n=!1,t=void 0;try{for(var a,r=i.signatures[Symbol.iterator]();!(e=(a=r.next()).done);e=!0){a.value.formSignatureUrl(i.apiUrl)}}catch(e){n=!0,t=e}finally{try{e||null==r.return||r.return()}finally{if(n)throw t}}}function c(){var e=!0,n=!1,t=void 0;try{for(var a,r=i.signatures[Symbol.iterator]();!(e=(a=r.next()).done);e=!0){a.value.generateBaseString({httpMethod:i.httpMethod,requestBodyType:i.requestBodyType,requestBody:i.requestBody})}}catch(e){n=!0,t=e}finally{try{e||null==r.return||r.return()}finally{if(n)throw t}}}function d(e,n){i.requestBody.urlencoded.push({key:e,value:n})}function u(e){if(Object.keys(e).forEach(function(n){"signatures"!==n&&(i[n]=e[n])}),i.signatures=[],e.signatures){var n=!0,t=!1,a=void 0;try{for(var r,s=e.signatures[Symbol.iterator]();!(n=(r=s.next()).done);n=!0){var o=r.value,l=new P(i.apiUrl,o);l.generateBaseString({httpMethod:i.httpMethod,requestBodyType:i.requestBodyType,requestBody:i.requestBody}),i.signatures.push(l)}}catch(e){t=!0,a=e}finally{try{n||null==s.return||s.return()}finally{if(t)throw a}}}}i.sendingTestRequest=!1,i.authHeader="",i.apiUrl="",i.httpMethods=k.main.httpMethods,i.httpMethod=i.httpMethods[0],i.requestBodyType=k.constants.requestBodyTypes[0],i.requestBody={json:"",urlencoded:[]},i.gatewayZoneOptions=k.main.providerGateway,i.authLevels=k.main.authLevels,i.signatures=[],e.config=k,i.addSignature=function(){i.signatures.push(new P(i.apiUrl,{allowCustomSignatureUrl:!1,appId:"",appVersion:k.main.appVersion,authLevel:k.main.authLevels[0],gatewayZone:k.constants.gatewayZones.internet}))},i.addUrlencodedBody=d,i.allBaseStringsFormed=o,i.canSendTestRequest=function(){var e=i.apiUrl;i.signatures.length>0&&(e=e&&o());return e},i.compareBaseString=function(e,t,r){r||(r="");e.showBaseStringComparison=!0;for(var i=!1,s="",o=0;o<t.length;o++){var l=t[o],c=r[o];if(null==c){var d=t.substring(o);s+="<span class='missing-basestring-char'>"+d+"</span>";break}l===c||i?l===c&&i&&(c="</span>"+c,i=!1):(c="<span class='incorrect-basestring-char''>"+c,i=!0),s+=c}r.length>t.length&&(i&&(s+="</span>"),s+="<span class = 'extra-basestring-char'>"+r.substring(t.length)+"</span>");e.baseStringComparison=a.trustAsHtml(s),t===r?n.success({message:"Basestrings are the same",delay:k.notificationShowTime}):n.error({message:"Basestrings are different",delay:k.notificationShowTime})},i.changeRequestBodyType=function(){"application/x-www-form-urlencoded"===i.requestBodyType&&0===i.requestBody.urlencoded.length&&d("","")},i.generateAuthHeader=s,i.getApiTestHeaders=function(e){for(var n="",t=Object.keys(e),a=0;a<t.length;a++){var r=t[a];n+="".concat(r,": ").concat(e[r],"\n")}return n},i.getApiTestResponseClass=function(){return{"bg-success":i.apiTest.status<300,"bg-warning":300<=i.apiTest.status&&i.apiTest.status<400,"bg-danger":400<=i.apiTest.status&&i.apiTest.status<600||-1===i.apiTest.status}},i.formSignatureUrls=l,i.onAllowCustomSignatureUrlChange=function(e){e.allowCustomSignatureUrl||(e.formSignatureUrl(i.apiUrl),e.generateBaseString({httpMethod:i.httpMethod,requestBodyType:i.requestBodyType,requestBody:i.requestBody}),i.authHeader="")},i.onApiUrlChange=function(){l(),c(),i.authHeader=""},i.onHttpMethodChange=function(){i.httpMethod===k.main.httpMethods[0]&&(i.requestBodyType=k.constants.requestBodyTypes[0]);c(),i.authHeader=""},i.onRequestBodyChange=function(){c(),i.authHeader=""},i.onSignatureParameterChange=function(e){e.formSignatureUrl(i.apiUrl),e.generateBaseString({httpMethod:i.httpMethod,requestBodyType:i.requestBodyType,requestBody:i.requestBody}),i.authHeader=""},i.removeSignature=function(e){i.signatures.splice(e,1)},i.removeUrlencodedBody=function(e){i.requestBody.urlencoded.splice(e,1)},i.sendTestRequest=function(){i.sendingTestRequest=!0,i.apiTest=null;var e={};"GET"!==i.httpMethod&&(e.requestBodyType=i.requestBodyType,"application/x-www-form-urlencoded"===i.requestBodyType?e.requestBody=i.requestBody.urlencoded.reduce(function(e,n){return n.key&&n.value&&(e[n.key]=n.value),e},{}):"application/json"===i.requestBodyType&&(e.requestBody=JSON.parse(i.requestBody.json)));if(o()){if(s(),!i.authHeader)return;e.authHeader=i.authHeader}return t.sendTestRequest(i.apiUrl,i.httpMethod,e).then(function(e){i.apiTest=e}).catch(function(e){i.apiTest=e,"error"===e.xhrStatus&&-1===e.status&&n.error({message:k.main.errorMessages.httpRequestError,delay:k.notificationShowTime})}).finally(function(){i.sendingTestRequest=!1})},i.showOptions=function(){r.open({animation:!0,backdrop:!1,template:U.template,controller:U.controller,controllerAs:"$ctrl",size:"lg",resolve:{currentConfig:function(){var e={httpMethod:i.httpMethod,apiUrl:i.apiUrl,signatures:i.signatures.map(function(e){return e.getConfig()})};"GET"!==i.httpMethod&&(e.requestBodyType=i.requestBodyType,e.requestBody=i.requestBody,e.requestBody.urlencoded=e.requestBody.urlencoded.map(function(e){return{key:e.key,value:e.value}}));1===i.selectedLevel&&(e.appSecret=i.appSecret);return e}()}}).result.then(u).catch(function(){})}}M.$inject=["$scope","Notification","testRequestService","$sce","$uibModal"];var j=M,_=t(283),E=t.n(_),O=t(172);function I(e){var n=this;n.jwt_standards=["JWS","JWE"],n.selectedJWTStandard=n.jwt_standards[0],n.clearFields=function(){n.input="",n.key="",n.output=""},n.verifyJOSE=function(t,a,r){var i=void 0;try{if("Error"===(i="JWS"===t?O.a.verifyJWS(JSON.parse(a),r):O.a.decryptJWE(JSON.parse(a),r)).status)throw new Error(i.output);e.success("Verified"),n.output=JSON.stringify(i.output,null,2)}catch(t){n.output=t.message,e.error({message:t.message})}}}I.$inject=["Notification"];var J=I,L=t(284),H=t.n(L);function F(e,n){return{sendTestRequest:function(t,a,r){var i={method:a,url:t,headers:{},timeout:1e4};return"GET"!==a&&r.requestBody&&("application/x-www-form-urlencoded"===r.requestBodyType?(i.data=n(r.requestBody),i.headers["Content-Type"]="application/x-www-form-urlencoded"):i.data=r.requestBody),r.authHeader&&(i.headers.Authorization=r.authHeader),e(i)}}}F.$inject=["$http","$httpParamSerializerJQLike"];var V=F;t(665);r.a.module("app",[s.a,l.a,d.a]).controller("mainController",h).factory("testRequestService",V).config(["$stateProvider","$urlRouterProvider",function(e,n){e.state({name:"signatureValidator",url:"/signature-validator",controller:j,controllerAs:"$ctrl",template:E.a}).state({name:"joseValidator",url:"/jose-validator",controller:J,controllerAs:"$ctrl",template:H.a}),n.otherwise("/signature-validator")}]).directive("onReadFile",["$parse",function(e){return{restrict:"A",scope:!1,link:function(n,t,a){var r=e(a.onReadFile);t.on("change",function(e){var a=new FileReader;a.onload=function(e){n.$apply(function(){r(n,{$fileContents:e.target.result})})},a.readAsText((e.srcElement||e.target).files[0]),t.val("")})}}}])}});